# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package -Dnative

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
      with:
        directory: backend

    - name: Compute coverage
      id: compute_coverage
      run: |
        sudo apt install -y --no-install-recommends xmlstarlet
        missed=$(xmlstarlet sel -t -v "/report/counter[@type='INSTRUCTION']/@missed" target/jacoco-report/jacoco.xml)
        covered=$(xmlstarlet sel -t -v "/report/counter[@type='INSTRUCTION']/@covered" target/jacoco-report/jacoco.xml)
        coverage=$(bc -l <<< "100 * $covered / ($missed + $covered)")
        coverage=$(printf "%.f%%" $(echo "$coverage" | bc -l))
        echo "coverage=$coverage"
        echo "coverage=$coverage" >> "$GITHUB_OUTPUT"

    - name: Coverage badge
      uses: RubbaBoy/BYOB@v1.3.0
      with:
        name: Coverage
        label: 'Coverage'
        status:  ${{steps.compute_coverage.outputs.coverage}}
        color: 00EEFF
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
      with:
        context: ./backend
        file: backend/src/main/docker/Dockerfile.native
        push: true
        tags: ${{ steps.meta.outputs.tags }},latest
        labels: ${{ steps.meta.outputs.labels }}

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v2
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true
