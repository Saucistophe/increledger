# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn -B package

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    - name: Compute coverage
      run: |
        sudo apt install -y --no-install-recommends xmlstarlet
        missed=$(xmlstarlet sel -t -v "/report/counter[@type='INSTRUCTION']/@missed" target/jacoco-report/jacoco.xml)
        covered=$(xmlstarlet sel -t -v "/report/counter[@type='INSTRUCTION']/@covered" target/jacoco-report/jacoco.xml)
        coverage=$(bc -l <<< "100 * $covered / ($missed + $covered)")
        coverage=$(printf "%.f%%" $(echo "$coverage" | bc -l))
        echo "coverage=$coverage"
        echo "coverage=$coverage" >> "$GITHUB_OUTPUT"

    - name: Coverage badge
      uses: RubbaBoy/BYOB@v1.3.0
      env:
        COVERAGE: ${{steps.compute_coverage.outputs.coverage}}
      with:
        name: Coverage
        label: 'Coverage'
        status: $COVERAGE
        color: 00EEFF
        github_token: ${{ secrets.GITHUB_TOKEN }}